{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":[" "]},"docs":[{"location":"","title":"Cyfrowe przetwarzanie sygna\u0142\u00f3w i obraz\u00f3w","text":""},{"location":"#laboratorium-przetwarzanie-obrazow-w-dziedzinie-przestrzennej","title":"Laboratorium: Przetwarzanie obraz\u00f3w w dziedzinie przestrzennej","text":""},{"location":"#wstep","title":"Wst\u0119p","text":"<p>W ramach tego laboratorium, zosta\u0142y wykonane zadania zwi\u0105zane z przetwarzaniem obraz\u00f3w w dziedzinie przestrzennej za pomoc\u0105 j\u0119zyka programowania Python. Celem by\u0142o zdobycie umiej\u0119tno\u015bci wczytywania, przetwarzania, analizowania oraz filtrowania obraz\u00f3w. Do oblicze\u0144 u\u017cyli\u015bmy biblioteki numpy. Do stworzenia interfejsu oraz rysowania wykres\u00f3w u\u017cyli\u015bmy bibliotek 'tkinter' oraz 'matplotlib'. Do przetwarzania obraz\u00f3w u\u017cyli\u015bmy biblioteki 'scikit-image'. Do tworzenia histogram\u00f3w u\u017cyli\u015bmy biblioteki 'cv2'. Linki do dokumentacji poszczeg\u00f3lnych bibliotek znajduj\u0105 si\u0119 na dole tej strony.</p>"},{"location":"#plan-cwiczen-laboratoryjnych","title":"Plan \u0107wicze\u0144 laboratoryjnych","text":"<ol> <li>Platforma testowa</li> <li>Przekszta\u0142canie punktowe</li> <li>Histogram obrazu</li> <li>Histogram obrazu</li> <li>Filtracja dolnoprzepustowa</li> <li>Filtracja dolnoprzepustowa</li> <li>Filtracja g\u00f3rnoprzepustowa</li> <li>Poprawa jako\u015bci poprzez wieloetapowe przetwarzanie</li> </ol>"},{"location":"#szczegoy-zadan","title":"Szczeg\u00f3\u0142y zada\u0144","text":""},{"location":"#cwiczenie-5-platforma-testowa","title":"\u0106wiczenie 5: Platforma testowa","text":"<p>Napisz skrypt w Pythonie/Matlabie umo\u017cliwiaj\u0105cy wczytywanie i wizualizacj\u0119 badanych obraz\u00f3w. Program powinien umo\u017cliwia\u0107 1. wy\u015bwietlanie obrazu wczytanego z pliku o podanej nazwie, 2. sporz\u0105dzenie wykres\u00f3w zmian poziomu szaro\u015bci wzd\u0142u\u017c wybranej linii poziomej lub pionowej o zadanej wsp\u00f3\u0142rz\u0119dnej, 3. wyb\u00f3r podobrazu (prostok\u0105tnego obszaru) o podanych wsp\u00f3\u0142rz\u0119dnych oraz jego zapis do pliku o zadanej nazwie.</p>"},{"location":"#cwiczenie-6-przeksztacanie-punktowe","title":"\u0106wiczenie 6: Przekszta\u0142canie punktowe","text":"<p>Zadania: 1. Zaobserwuj dzia\u0142anie nast\u0119puj\u0105cych przekszta\u0142ce\u0144 punktowych na przyk\u0142adowych obrazach:  - Mno\u017cenie obrazu przez sta\u0142\u0105. Obrazy: chest_xray.tif, pollen-dark.tif, spectrum.tif.  - Transformacj\u0119 logarytmiczn\u0105. Obraz: spectrum.tif. - Zmian\u0119 dynamiki skali szaro\u015bci (kontrastu). Obrazy: chest_xray.tif, einstein-low-contrast.tif, pollen-lowcontrast.tif. - Korekcj\u0119 gamma. Obraz: aerial_view.tif.</p>"},{"location":"#cwiczenia-7-8-histogram-obrazu","title":"\u0106wiczenia 7-8: Histogram obrazu","text":"<p>Zadania: 1. Wypr\u00f3buj dzia\u0142anie wyr\u00f3wnywania histogramu na przyk\u0142adowych obrazach. By zaobserwowa\u0107 skuteczno\u015b\u0107 procedury poddaj wyr\u00f3wnywaniu obrazy zbyt ciemne i zbyt jasne. Narysowa\u0107 histogramy obraz\u00f3w przed i po wyr\u00f3wnaniu. Obrazy: chest_xray.tif, pollen-dark.tif, pollen-ligt.tif, pollen-lowcontrast.tif, pout.tif, spectrum.tif. 2. Sprawd\u017a dzia\u0142anie lokalnych kontekstowych om\u00f3wionych na wyk\u0142adzie pt. \u201eTransformacje poziomu jasno\u015bci\u201d jako lokalne wyr\u00f3wnywanie histogramu. Obraz: hidden-symbols.tif</p>"},{"location":"#cwiczenia-9-10-filtracja-dolnoprzepustowa","title":"\u0106wiczenia 9-10: Filtracja dolnoprzepustowa","text":"<p>Zadania: 1. Zbadaj skuteczno\u015b\u0107 redukcji szumu typu \u201es\u00f3l i pieprz\u201d za pomoc\u0105 - liniowego filtra u\u015bredniaj\u0105cego z kwadratow\u0105 mask\u0105, rozpoczynaj\u0105c od maski rozmiaru 3 \u00d7 3. - nieliniowego filtra medianowego - filtr\u00f3w minimum i maksimum. Dane: cboard_pepper_only.tif, cboard_salt_only.tif, cboard_salt_pepper.tif 2. Zbadaj dzia\u0142anie dolnoprzepustowych filtr\u00f3w u\u015bredniaj\u0105cego i gaussowskiego dla danych obraz\u00f3w. Zaobserwuj wp\u0142yw rozmiaru masek na wynik filtracji. Dane: characters_test_pattern.tif, zoneplate.tif.  </p>"},{"location":"#cwiczenie-11-filtracja-gornoprzepustowa","title":"\u0106wiczenie 11: Filtracja g\u00f3rnoprzepustowa","text":"<p>Zadania: 1. Wykrywanie kraw\u0119dzi obiekt\u00f3w i poprawa ostro\u015bci. - U\u017cyj filtra z mask\u0105 Sobela do wykrywania kraw\u0119dzi poziomych, pionowych i uko\u015bnych. Dane: circuitmask.tif, testpat1.png - Zaobserwuj dzia\u0142anie Laplasjanu do wyostrzania szczeg\u00f3\u0142\u00f3w. Dane: blurry-moon.tif - Zbadaj dzia\u0142anie filtr\u00f3w typu \u201eunsharp masking\u201d i \u201ehigh boost\u201d. Dane: text-dipxe-blurred.tif  </p>"},{"location":"#cwiczenie-12-poprawa-jakosci-poprzez-wieloetapowe-przetwarzanie","title":"\u0106wiczenie 12: Poprawa jako\u015bci poprzez wieloetapowe przetwarzanie","text":"<p>Zadania: 1. Naszym celem jest poprawa jako\u015bci obrazu za pomoc\u0105 kolejnego stosowania r\u00f3\u017cnych przekszta\u0142ce\u0144 i filtr\u00f3w. Zastosuj z\u0142o\u017cone, wieloetapowe podej\u015bcie do poprawy jako\u015bci przedstawione na wyk\u0142adzie pt. \u201eFiltracja w dziedzinie przestrzennej\u201d. Dane: bonescan.tif.</p>"},{"location":"#bibliografia","title":"Bibliografia","text":"<ol> <li>Dokumentacja <code>numpy</code>: link</li> <li>Dokumentacja <code>Matplotlib</code>: link</li> <li>Dokumentacja <code>tkinter</code>: link</li> <li>Dokumentacja <code>cv2</code>: link</li> <li>Dokumentacja <code>scikit-image</code>: link</li> <li><code>Python</code> Tutorial: link</li> </ol>"},{"location":"ex_10/","title":"Zadanie 10","text":"<p>Zbadaj dzia\u0142anie dolnoprzepustowych filtr\u00f3w u\u015bredniaj\u0105cego i gaussowskiego dla danych obraz\u00f3w. Zaobserwuj wp\u0142yw rozmiaru masek na wynik filtracji. Dane: characters_test_pattern.tif, zoneplate.tif.  </p> <p>Stosowanie filtra Gaussowskiego w przetwarzaniu obrazu ma na celu wyg\u0142adzenie (rozmycie) obrazu, co pomaga w redukcji szum\u00f3w i zniwelowaniu drobnych szczeg\u00f3\u0142\u00f3w. Filtr Gaussowski opiera si\u0119 na rozk\u0142adzie normalnym (Gaussa) i dzia\u0142a poprzez nadanie wag s\u0105siednim pikselom na podstawie ich odleg\u0142o\u015bci od piksela centralnego, przy czym piksele bli\u017cej \u015brodka maj\u0105 wi\u0119kszy wp\u0142yw na wynikow\u0105 warto\u015b\u0107 ni\u017c piksele dalsze. Filtr gaussowski jest filtrem dolnoprzepustowym. Jest on preferowany od filtra u\u015bredniaj\u0105cego, poniewa\u017c podczas jego stosowania mo\u017cemy zaobserwowa\u0107 lepsze zachowanie szczeg\u00f3\u0142\u00f3w i bardziej naturalny wygl\u0105d obrazu.  </p> <p> <pre><code>footprint = morphology.rectangle(7,7)\nimage = filters.rank.mean(image, footprint = footprint)\nimage = filters.gaussian(image, sigma = 1)\n</code></pre> </p>"},{"location":"ex_11/","title":"Zadanie 11","text":"<p>Wykrywanie kraw\u0119dzi obiekt\u00f3w i poprawa ostro\u015bci. - U\u017cyj filtra z mask\u0105 Sobela do wykrywania kraw\u0119dzi poziomych, pionowych i uko\u015bnych. Dane: circuitmask.tif, testpat1.png - Zaobserwuj dzia\u0142anie Laplasjanu do wyostrzania szczeg\u00f3\u0142\u00f3w. Dane: blurry-moon.tif - Zbadaj dzia\u0142anie filtr\u00f3w typu \u201eunsharp masking\u201d i \u201ehigh boost\u201d. Dane: text-dipxe-blurred.tif  </p> <p>filtr z mask\u0105 Sobela Filtr z mask\u0105 Sobela jest stosowany w przetwarzaniu obrazu do wykrywania kraw\u0119dzi. Dzia\u0142a poprzez obliczanie przybli\u017conych pochodnych jasno\u015bci obrazu, co pozwala na identyfikacj\u0119 obszar\u00f3w, gdzie intensywno\u015b\u0107 pikseli zmienia si\u0119 gwa\u0142townie. Te zmiany wskazuj\u0105 na obecno\u015b\u0107 kraw\u0119dzi. <pre><code>image = filters.sobel(image)\n</code></pre> </p> <p>dzia\u0142anie Laplasjanu do wyostrzania obrazu Laplasjan jest operatorem u\u017cywanym w przetwarzaniu obrazu do wykrywania kraw\u0119dzi oraz wyostrzania obraz\u00f3w. Dzia\u0142a poprzez obliczanie drugiej pochodnej jasno\u015bci obrazu, co umo\u017cliwia identyfikacj\u0119 obszar\u00f3w, gdzie nast\u0119puje gwa\u0142towna zmiana intensywno\u015bci pikseli. Te zmiany cz\u0119sto odpowiadaj\u0105 kraw\u0119dziom obiekt\u00f3w w obrazie.  </p> <p> </p> <p>Laplasjan:  <pre><code>image = filters.laplace(image)\n</code></pre></p> <p>Obraz z na\u0142o\u017conym Laplasjanem: </p> <pre><code>image = image + filters.laplace(image)\n</code></pre> <p>filtry unsharp masking oraz high boost</p> <p> </p> <p>Filtr unsharp masking to technika wyostrzania obrazu, kt\u00f3ra polega na wzmocnieniu kraw\u0119dzi i detali poprzez podkre\u015blenie r\u00f3\u017cnic mi\u0119dzy pikselami. Mimo swojej nazwy, \"unsharp masking\" dzia\u0142a na zasadzie uwypuklania ostrych szczeg\u00f3\u0142\u00f3w w obrazie.  </p> <p><pre><code>image = filters.unsharp_mask(image)\n</code></pre> </p> <p>Filtr high-boost jest rozszerzeniem techniki unsharp masking, kt\u00f3re dodatkowo wzmacnia detale i kraw\u0119dzie obrazu. Dzia\u0142anie tego filtra jest bardzo podobne do unsharp masking, z t\u0105 r\u00f3\u017cnic\u0105, \u017ce do oryginalnego obrazu dodaje si\u0119 wzmocnion\u0105 wersj\u0119 maski.  </p> <p><pre><code>imageGauss = cv2.GaussianBlur(image, (7,7), 0)\nimage = cv2.addWeighted(image, 3, imageGauss, -2, 0)\n</code></pre> </p>"},{"location":"ex_12/","title":"Zadanie 12","text":"<p>Naszym celem jest poprawa jako\u015bci obrazu za pomoc\u0105 kolejnego stosowania r\u00f3\u017cnych przekszta\u0142ce\u0144 i filtr\u00f3w. Zastosuj z\u0142o\u017cone, wieloetapowe podej\u015bcie do poprawy jako\u015bci przedstawione na wyk\u0142adzie pt. \u201eFiltracja w dziedzinie przestrzennej\u201d. Dane: bonescan.tif.  </p> <p> Na powy\u017cszym obrazie zastosowali\u015bmy wszystkie kroki przedstawione na wyk\u0142adzie, aby w wielu etapach poprawi\u0107 jego jako\u015b\u0107. <pre><code>imageA = image\nimageB = filters.laplace(imageA)\nimageC = imageA + imageB\nimageD = filters.sobel(imageC)\nimageE = filters.gaussian(imageD)\nimageF = imageE * imageA\nimageG = imageA + imageF\nc = 1\ngamma = 0.5\nimageG = c * np.float_power(image,gamma)\n</code></pre>  Wynik zgadza si\u0119 z tym, co zosta\u0142o zaprezentowane na wyk\u0142adzie.</p>"},{"location":"ex_5/","title":"Zadanie 5","text":"<p>Napisz skrypt w Pythonie/Matlabie umo\u017cliwiaj\u0105cy wczytywanie i wizualizacj\u0119 badanych obraz\u00f3w. Program powinien umo\u017cliwia\u0107 1. wy\u015bwietlanie obrazu wczytanego z pliku o podanej nazwie, 2. sporz\u0105dzenie wykres\u00f3w zmian poziomu szaro\u015bci wzd\u0142u\u017c wybranej linii poziomej lub pionowej o zadanej wsp\u00f3\u0142rz\u0119dnej, 3. wyb\u00f3r podobrazu (prostok\u0105tnego obszaru) o podanych wsp\u00f3\u0142rz\u0119dnych oraz jego zapis do pliku o zadanej nazwie.</p>"},{"location":"ex_5/#platforma-testowa","title":"Platforma testowa","text":"<p>Na zdj\u0119ciu znajduje si\u0119 interfejs graficzny aplikacji, kt\u00f3ra s\u0142u\u017cy do analizy i przetwarzania obraz\u00f3w. po za\u0142adowaniu przyk\u0142adowego obrazu. Aplikacja posiada g\u00f3rny panel z przyciskami i polami tekstowymi umo\u017cliwiaj\u0105cymi u\u017cytkownikowi r\u00f3\u017cne operacje na danych.</p> <p></p>"},{"location":"ex_5/#wyglad-i-funkcjonalnosc-aplikacji","title":"Wygl\u0105d i Funkcjonalno\u015b\u0107 Aplikacji","text":""},{"location":"ex_5/#gorny-panel","title":"G\u00f3rny panel","text":"<ul> <li>Horizontal / Vertical: Te przyciski odwo\u0142uj\u0105 si\u0119 do wykresu przedstawiaj\u0105cego zmian\u0119 szaro\u015bci obrazu. Za ich pomoc\u0105 mo\u017cemy wybra\u0107 czy chcemy bada\u0107 zmian\u0119 szaro\u015bci w kolumnie czy w wierszu.  </li> <li>Coordinate: To pole tekstowe r\u00f3wnie\u017c odnosi si\u0119 do wykresu przedstawiaj\u0105cego zmian\u0119 szaro\u015bci obrazu. W tej linii mo\u017cemy wybra\u0107 dla kt\u00f3rej kolumny/wiersza podawany jest wykres.  </li> <li>top left x / top left y: Te pola tekstowe odnosz\u0105 si\u0119 do pod-obrazu. W tych polach mo\u017cemy wpisa\u0107 koordynaty g\u00f3rnego lewego k\u0105ta pod-obrazu.  </li> <li>bottom right x / bottom right y: Te pola tekstowe r\u00f3wnie\u017c odnosz\u0105 si\u0119 do pod-obrazu. W tych polach mo\u017cemy wpisa\u0107 koordynaty prawego dolnego k\u0105ta pod-obrazu.  </li> <li>Load Image: Ten przycisk umo\u017cliwia u\u017cytkownikowi wybranie pliku z obrazem.</li> <li>Save Subimage: Ten przycisk umo\u017cliwia u\u017cytkownikowi zapisanie pod-obrazu.</li> <li>none, 6a, ...: To pole zawiera przyciski po kt\u00f3rych klikni\u0119ciu wykona si\u0119 na obecnie za\u0142adowanym obrazie operacja opisana w poleceniu \u0107wiczenia o odpowiednim numerze. Przyciski w polu mo\u017cna przewij\u0105c za pomoc\u0105 znajduj\u0105cego si\u0119 obok przewijaka.  </li> </ul>"},{"location":"ex_5/#jak-zrobiona-jest-aplikacja","title":"Jak Zrobiona Jest Aplikacja","text":"<p>\u0141adowaniu obrazu <pre><code>def load_image(file_path):\n    image = Image.open(file_path).convert('L')  # Convert image to grayscale\n    return np.array(image)\n\ndef open_file():\n    global image\n    global exercise\n    top_left = (int(top_left_x_entry.get()),int(top_left_y_entry.get()))\n    bottom_right = (int(bottom_right_x_entry.get()),int(bottom_right_y_entry.get()))\n    exercise = \"none\"\n    file_path = filedialog.askopenfilename()\n    if file_path:\n        image = load_image(file_path)\n        plot(image, int(coord_entry.get()), direction_var.get(), top_left, bottom_right, canvas_frame, exercise)\n</code></pre></p> <p>Zapisywanie pod-obrazu <pre><code>def save():\n    output_file = \"subimage.png\"\n    top_left = (int(top_left_x_entry.get()),int(top_left_y_entry.get()))\n    bottom_right = (int(bottom_right_x_entry.get()),int(bottom_right_y_entry.get()))\n    save_subimage(image, top_left, bottom_right, output_file)\n\ndef save_subimage(image, top_left, bottom_right, output_file):\n    subimage = image[top_left[1]:bottom_right[1], top_left[0]:bottom_right[0]]\n    subimage_pil = Image.fromarray(subimage)\n    subimage_pil.save(output_file)\n</code></pre></p> <p>Aktualizowanie interfejsu po zmianie  opcji w g\u00f3rnym panelu <pre><code>def on_change():\n    if image is not None:\n        direction = direction_var.get()\n        coord = int(coord_entry.get())\n        top_left = (int(top_left_x_entry.get()),int(top_left_y_entry.get()))\n        bottom_right = (int(bottom_right_x_entry.get()),int(bottom_right_y_entry.get()))\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n</code></pre></p> <p>Zmiana wybranego \u0107wiczenia/wybranej operacji <pre><code>def on_listbox_select(event):\n    direction = direction_var.get()\n    coord = int(coord_entry.get())\n    top_left = (int(top_left_x_entry.get()),int(top_left_y_entry.get()))\n    bottom_right = (int(bottom_right_x_entry.get()),int(bottom_right_y_entry.get()))\n\n    # Choose exercise (6a, 6b, 6c, 6d, 7, 8a, 8b, 9a, 9b, 9c, 10, 11a, 11b, 11c, 12)\n    selected_option = listbox.get(listbox.curselection())\n    if selected_option == 'none':\n        exercise = \"none\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '6a':\n        exercise = \"6a\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '6b':\n        exercise = \"6b\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '6c':\n        exercise = \"6c\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '6d':\n        exercise = \"6d\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '7przed':\n        exercise = \"7przed\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '7po':\n        exercise = \"7po\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '8a':\n        exercise = \"8a\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '8b':\n        exercise = \"8b\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '9a':\n        exercise = \"9a\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '9b':\n        exercise = \"9b\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '9cMIN':\n        exercise = \"9cMIN\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '9cMAX':\n        exercise = \"9cMAX\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '10':\n        exercise = \"10\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '11a':\n        exercise = \"11a\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '11b':\n        exercise = \"11b\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '11cUNSHARP':\n        exercise = \"11cUNSHARP\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '11cBOOST':\n        exercise = \"11cBOOST\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n    elif selected_option == '12':\n        exercise = \"12\"\n        plot(image, coord, direction, top_left, bottom_right, canvas_frame, exercise)\n</code></pre></p> <p>Inicjalizacja interfejsu graficznego <pre><code># Tkinter setup\nroot = tk.Tk()\nroot.title(\"Image Analysis\")\n\n# Frame for controls\ncontrol_frame = tk.Frame(root)\ncontrol_frame.pack(anchor=tk.N, fill=tk.X)\n\n# Direction selection\ndirection_var = tk.StringVar(value='horizontal')\ntk.Radiobutton(control_frame, text=\"Horizontal\", variable=direction_var, value='horizontal', command=on_change).pack(side=tk.LEFT)\ntk.Radiobutton(control_frame, text=\"Vertical\", variable=direction_var, value='vertical', command=on_change).pack(side=tk.LEFT)\n\n# Coordinate entry\ncoord_label = tk.Label(control_frame, text=\"Coordinate:\")\ncoord_label.pack(side=tk.LEFT, padx=5)\ncoord_entry = tk.Entry(control_frame)\ncoord_entry.pack(side=tk.LEFT)\ncoord_entry.insert(0, \"100\")\ncoord_entry.bind('&lt;Return&gt;', lambda event: on_change())\n\n# Subimage top left\ntop_left_x_label = tk.Label(control_frame, text=\"top left x:\")\ntop_left_x_label.pack(side=tk.LEFT, padx=5)\ntop_left_x_entry = tk.Entry(control_frame)\ntop_left_x_entry.pack(side=tk.LEFT)\ntop_left_x_entry.insert(0, \"50\")\ntop_left_x_entry.bind('&lt;Return&gt;', lambda event: on_change())\n\ntop_left_y_label = tk.Label(control_frame, text=\"top left y:\")\ntop_left_y_label.pack(side=tk.LEFT, padx=5)\ntop_left_y_entry = tk.Entry(control_frame)\ntop_left_y_entry.pack(side=tk.LEFT)\ntop_left_y_entry.insert(0, \"50\")\ntop_left_y_entry.bind('&lt;Return&gt;', lambda event: on_change())\n\n# Subimage bottom right\nbottom_right_x_label = tk.Label(control_frame, text=\"bottom right x:\")\nbottom_right_x_label.pack(side=tk.LEFT, padx=5)\nbottom_right_x_entry = tk.Entry(control_frame)\nbottom_right_x_entry.pack(side=tk.LEFT)\nbottom_right_x_entry.insert(0, \"200\")\nbottom_right_x_entry.bind('&lt;Return&gt;', lambda event: on_change())\n\nbottom_right_y_label = tk.Label(control_frame, text=\"bottom right y:\")\nbottom_right_y_label.pack(side=tk.LEFT, padx=5)\nbottom_right_y_entry = tk.Entry(control_frame)\nbottom_right_y_entry.pack(side=tk.LEFT)\nbottom_right_y_entry.insert(0, \"200\")\nbottom_right_y_entry.bind('&lt;Return&gt;', lambda event: on_change())\n\n# Load image button\nload_button = tk.Button(control_frame, text=\"Load Image\", command=open_file)\nload_button.pack(side=tk.LEFT, padx=5)\n\n# Save subimage button\nsave_button = tk.Button(control_frame, text=\"Save Subimage\", command=save)\nsave_button.pack(side=tk.LEFT, padx=5)\n\n# Listbox for selection\n# Choose exercise (6a, 6b, 6c, 6d, 7, 8a, 8b, 9a, 9b, 9c, 10, 11a, 11b, 11c, 12)\nlistbox_frame = tk.Frame(control_frame)\nlistbox_frame.pack(side=tk.LEFT, padx=5)\nlistbox = tk.Listbox(listbox_frame, height=2)\nlistbox.pack()\nlistbox.insert(1, \"none\")\nlistbox.insert(2, \"6a\")\nlistbox.insert(3, \"6b\")\nlistbox.insert(4, \"6c\")\nlistbox.insert(5, \"6d\")\nlistbox.insert(6, \"7przed\")\nlistbox.insert(7, \"7po\")\nlistbox.insert(8, \"8a\")\nlistbox.insert(9, \"8b\")\nlistbox.insert(10, \"9a\")\nlistbox.insert(11, \"9b\")\nlistbox.insert(12, \"9cMIN\")\nlistbox.insert(13, \"9cMAX\")\nlistbox.insert(14, \"10\")\nlistbox.insert(15, \"11a\")\nlistbox.insert(16, \"11b\")\nlistbox.insert(17, \"11cUNSHARP\")\nlistbox.insert(18, \"11cBOOST\")\nlistbox.insert(19, \"12\")\nlistbox.bind('&lt;&lt;ListboxSelect&gt;&gt;', on_listbox_select)\n\nscrollbar = Scrollbar(control_frame, orient=\"vertical\")\nscrollbar.config(command=listbox.yview)\nscrollbar.pack(side=\"right\", fill=\"y\")\nlistbox.config(yscrollcommand=scrollbar.set)\n\n# Canvas frame for plotting\ncanvas_frame = tk.Frame(root)\ncanvas_frame.pack(fill=tk.BOTH, expand=1)\n\nimage = None\n</code></pre></p> <p>Spos\u00f3b rysowania obrazu <pre><code>fig, axs = plt.subplots(2, 2, figsize=(10, 10))\n\n# Display original image\naxs[1, 1].imshow(image, cmap='gray')\naxs[1, 1].set_title('Pocz\u0105tkowy obraz')\naxs[1, 1].axis('off')\n</code></pre></p> <p>Wej\u015bcie do programu (funkcja main) <pre><code>if __name__ == '__main__':\n    root.mainloop()\n</code></pre></p>"},{"location":"ex_6/","title":"Zadanie 6","text":"<p>Zaobserwuj dzia\u0142anie nast\u0119puj\u0105cych przekszta\u0142ce\u0144 punktowych na przyk\u0142adowych obrazach:  1. Mno\u017cenie obrazu przez sta\u0142\u0105. Obrazy: chest_xray.tif, pollen-dark.tif, spectrum.tif.  2. Transformacj\u0119 logarytmiczn\u0105. Obraz: spectrum.tif. 3. Zmian\u0119 dynamiki skali szaro\u015bci (kontrastu). Obrazy: chest_xray.tif, einstein-low-contrast.tif, pollen-lowcontrast.tif. 4. Korekcj\u0119 gamma. Obraz: aerial_view.tif.</p> <p>1. Mno\u017cenie obrazu przez sta\u0142\u0105 Mno\u017cenie obrazu przez sta\u0142\u0105, zwane r\u00f3wnie\u017c skalowaniem intensywno\u015bci lub jasno\u015bci obrazu, powoduje r\u00f3wnomierne zwi\u0119kszenie lub zmniejszenie jasno\u015bci wszystkich pikseli w obrazie.  </p> <p><pre><code>c = 5\nimage = c * image\n</code></pre> </p> <p>2. Transformacja logarytmiczna Transformacja logarytmiczna obrazu jest technik\u0105, kt\u00f3ra stosuje funkcj\u0119 logarytmiczn\u0105 do przekszta\u0142cenia warto\u015bci pikseli. Jest to szczeg\u00f3lnie przydatne w zwi\u0119kszaniu widoczno\u015bci szczeg\u00f3\u0142\u00f3w w ciemniejszych obszarach obrazu bez nadmiernego rozja\u015bniania ja\u015bniejszych obszar\u00f3w.</p> <p><pre><code>c = 5\nimage = c * np.log(1 + (image))\n</code></pre> </p> <p>3. Zmiana dynamiki skali szaro\u015bci (kontrastu) Zmiana dynamiki skali szaro\u015bci jest technik\u0105 stosowan\u0105 w celu poprawy widoczno\u015bci i jako\u015bci obrazu. Polega ona na rozci\u0105gni\u0119ciu zakresu warto\u015bci jasno\u015bci (lub szaro\u015bci) pikseli w obrazie tak, aby obejmowa\u0142 ca\u0142y dost\u0119pny zakres intensywno\u015bci.</p> <p><pre><code>m = 0.45\ne = 4\nimage = 1 / (1 + np.float_power((m/image),e))\n</code></pre> </p> <p>4. Korekcja gamma Korekcja gamma obrazu to technika maj\u0105ca na celu dostosowanie jasno\u015bci i kontrastu obrazu w spos\u00f3b nieliniowy. Proces ten polega na przekszta\u0142ceniu warto\u015bci jasno\u015bci pikseli za pomoc\u0105 funkcji pot\u0119gowej, co pozwala na bardziej naturalne i realistyczne odwzorowanie obrazu na r\u00f3\u017cnych ekranach.</p> <p><pre><code>c = 5\ngamma = 5\nimage = c * np.float_power(image,gamma)\n</code></pre> </p>"},{"location":"ex_7/","title":"Zadanie 7","text":"<p>Wypr\u00f3buj dzia\u0142anie wyr\u00f3wnywania histogramu na przyk\u0142adowych obrazach. By zaobserwowa\u0107 skuteczno\u015b\u0107 procedury poddaj wyr\u00f3wnywaniu obrazy zbyt ciemne i zbyt jasne. Narysowa\u0107 histogramy obraz\u00f3w przed i po wyr\u00f3wnaniu. Obrazy: chest_xray.tif, pollen-dark.tif, pollen-ligt.tif, pollen-lowcontrast.tif, pout.tif, spectrum.tif.  </p> <p>Wyr\u00f3wnywanie histogramu jest technik\u0105 kt\u00f3ra ma na celu popraw\u0119 kontrastu obrazu poprzez r\u00f3wnomierne roz\u0142o\u017cenie warto\u015bci jasno\u015bci pikseli. Proces ten jest szczeg\u00f3lnie u\u017cyteczny w przypadkach, gdy obraz ma ograniczony zakres dynamiczny, co prowadzi do s\u0142abo widocznych szczeg\u00f3\u0142\u00f3w. Matematycznie, wyr\u00f3wnywanie histogramu dzia\u0142a poprzez przekszta\u0142cenie warto\u015bci intensywno\u015bci pikseli w taki spos\u00f3b, aby histogram obrazu po przekszta\u0142ceniu by\u0142 jak najbardziej p\u0142aski, czyli aby ka\u017cda warto\u015b\u0107 intensywno\u015bci by\u0142a reprezentowana przez podobn\u0105 liczb\u0119 pikseli. Dzi\u0119ki wyr\u00f3wnywaniu histogramu mo\u017cliwe jest uzyskanie obraz\u00f3w o lepszej jako\u015bci.</p> <p>Obraz zbyt jasny </p> <p>Przed wyr\u00f3wnaniem: <pre><code>histogram = cv2.calcHist([image],[0],None,[256],[0,256])\n</code></pre> </p> <p>Po wyr\u00f3wnaniu: <pre><code>image = cv2.equalizeHist(image)  \n</code></pre> <pre><code>histogram = cv2.calcHist([image],[0],None,[256],[0,256])\n</code></pre> </p> <p>Obraz zbyt ciemny </p> <p>Przed wyr\u00f3wnaniem: </p> <p>Po wyr\u00f3wnaniu: </p>"},{"location":"ex_8/","title":"Zadanie 8","text":"<p>Sprawd\u017a dzia\u0142anie lokalnych kontekstowych om\u00f3wionych na wyk\u0142adzie pt. \u201eTransformacje poziomu jasno\u015bci\u201d jako lokalne wyr\u00f3wnywanie histogramu. Obraz: hidden-symbols.tif</p> <p>Lokalne wyr\u00f3wnanie histogramu jest technik\u0105 przetwarzania obrazu, kt\u00f3ra polega na poprawie kontrastu w mniejszych, lokalnych obszarach obrazu zamiast na ca\u0142ym obrazie jednocze\u015bnie. Proces ten jest szczeg\u00f3lnie u\u017cyteczny w sytuacjach, gdzie r\u00f3\u017cne cz\u0119\u015bci obrazu maj\u0105 r\u00f3\u017cne charakterystyki jasno\u015bci i kontrastu.</p> <p></p> <pre><code>footprint = morphology.rectangle(3,3)\nimage = filters.rank.equalize(image, footprint=footprint)\n</code></pre> <p></p>"},{"location":"ex_9/","title":"Zadanie 9","text":"<p>Zbadaj skuteczno\u015b\u0107 redukcji szumu typu \u201es\u00f3l i pieprz\u201d za pomoc\u0105 - liniowego filtra u\u015bredniaj\u0105cego z kwadratow\u0105 mask\u0105, rozpoczynaj\u0105c od maski rozmiaru 3 \u00d7 3. - nieliniowego filtra medianowego - filtr\u00f3w minimum i maksimum. Dane: cboard_pepper_only.tif, cboard_salt_only.tif, cboard_salt_pepper.tif  </p> <p>Szumy typu s\u00f3l i pieprz, zwane tak\u017ce szumami impulsowymi, to rodzaj zak\u0142\u00f3ce\u0144, kt\u00f3re mog\u0105 wyst\u0119powa\u0107 w obrazach cyfrowych. Charakteryzuj\u0105 si\u0119 one pojawieniem losowych jasnych (s\u00f3l) i ciemnych (pieprz) pikseli, kt\u00f3re znacz\u0105co r\u00f3\u017cni\u0105 si\u0119 od otaczaj\u0105cych ich warto\u015bci pikseli. Te szumy s\u0105 zazwyczaj spowodowane b\u0142\u0119dami w transmisji danych, defektami w czujnikach obrazu lub zak\u0142\u00f3ceniami elektrycznymi. </p>"},{"location":"ex_9/#sol-i-pieprz","title":"S\u00f3l i pieprz","text":"<p>liniowy filtr u\u015bredniaj\u0105cy z kwadratow\u0105 mask\u0105 <pre><code>footprint = morphology.rectangle(3,3)\nimage = filters.rank.mean(image, footprint = footprint)\n</code></pre> </p> <p>nieliniowy filtr medianowy <pre><code>footprint = morphology.disk(5)\nimage = filters.median(image, footprint = footprint)\n</code></pre> </p> <p>filtr minimum <pre><code>footprint = morphology.rectangle(3,3)\nimage = filters.rank.minimum(image, footprint = footprint)\n</code></pre> </p> <p>filtr maksimum <pre><code>footprint = morphology.rectangle(3,3)\nimage = filters.rank.maximum(image, footprint = footprint)\n</code></pre> </p>"},{"location":"ex_9/#sol","title":"S\u00f3l","text":"<p>filtr minimum <pre><code>footprint = morphology.rectangle(3,3)\nimage = filters.rank.minimum(image, footprint = footprint)\n</code></pre> </p>"},{"location":"ex_9/#pieprz","title":"Pieprz","text":"<p>filtr maksimum <pre><code>footprint = morphology.rectangle(3,3)\nimage = filters.rank.maximum(image, footprint = footprint)\n</code></pre> </p>"},{"location":"ex_9/#wnioski","title":"Wnioski","text":"<p>Z naszych bada\u0144 wynika, \u017ce najlepszym filtrem do redukcji szum\u00f3w typu s\u00f3l i pieprz jest nieliniowy filtr medianowy. Liniowy filtr u\u015bredniaj\u0105cy z kwadratow\u0105 mask\u0105 radzi sobie troch\u0119 gorzej, ale nadal do\u015b\u0107 dobrze. Filtry maksimum i minimum nie nadaj\u0105 si\u0119 do redukcji szum\u00f3w tego typu. Inaczej jest, gdy mamy same szumy typu s\u00f3l albo same szumy typu pieprz. Dla szum\u00f3w typu s\u00f3l filtr minimum dzia\u0142a idealnie, a dla szum\u00f3w typu pieprz filtr maksimum dzia\u0142a idealnie.</p>"}]}